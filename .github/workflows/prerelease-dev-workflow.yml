# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    tags: 'v*'
    #branches: [ master ]
  #pull_request:
    #branches: [ master ]

jobs:
  build-and-test:
    runs-on: windows-latest
    
    env:
      Solution_Path: StudySmarterFlashcards.sln
      UWP_Project_Path: StudySmarterFlashcards.csproj
      UWP_Project_Directory: .\StudySmarterFlashcards\
      UWP_Test_Project_Path: StudySmarterFlashcardsTests.csproj
      UWP_Test_Project_Directory: .\StudySmarterFlashcardsTests\

    steps:
    - name: Configure Pagefile
      uses: bd-g/prerelease-dev-workflow@v1
      with:
        minimum-size: 32GB
        maximum-size: 32GB
        disk-root: "C:"
        
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
      
    - name: Use tag
      run: echo ${{steps.tag.outputs.tag}}
      
    - name: Extract version from tag
      uses: Amadevus/pwsh-script@v1
      id: getVersion
      with:
        script: '("{{steps.tag.outputs.tag}}").Split("v")[1]'
        
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0
      
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
      
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\$env:UWP_Project_Directory\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{steps.getVersion.outputs.result}}"
        $manifest.save(".\$env:UWP_Project_Directory\Package.appxmanifest")
        [xml]$testManifest = get-content ".\$env:UWP_Test_Project_Directory\Package.appxmanifest"
        $testManifest.Package.Identity.Version = "${{steps.getVersion.outputs.result}}"
        $testManifest.save(".\$env:UWP_Test_Project_Directory\Package.appxmanifest")
      
    - name: Build the solution
      run: msbuild $env:Solution_Path /p:Platform=x86 /p:AppxBundle=$env:AppxBundle /p:AppxBundlePlatform="x86|x64" /restore
      env:
        AppxBunde: Always
        BuildMode: StoreUpload
        Configuration: Debug
        
    - name: VSTest
      run: vstest.console.exe /Platform:x64 .\$env:UWP_Test_Project_Directory\AppPackages\StudySmarterFlashcardsTests_${{steps.getVersion.outputs.result}}_Debug_Test\StudySmarterFlashcardsTests_${{steps.getVersion.outputs.result}}_x86_Debug.appxsym
      
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: RC ${{steps.getVersion.output.result}}
        draft: false
        prerelease: true
    
    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\$env:UWP_Project_Directory\AppPackages\StudySmarterFlashcards_${{steps.getVersion.outputs.result}}_Debug_Test\StudySmarterFlashcards_${{steps.getVersion.outputs.result}}_x86_Debug.msixbundle
        asset_name: StorePackage_${{steps.getVersion.outputs.result}}.msixbundle
        asset_content_type: application/msixbundle   
        
        
        
      
